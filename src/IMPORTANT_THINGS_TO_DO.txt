Friend Simulator
	- go everywhere and give names to specific places
	- change the environment with plants

	- beware of the angery mountain
	- kingdom and king in west
	- dead robots "everywhere"
	- other kingdom in east

	- easterlings travel through valley to western kingdom for asylum etc.
	- player cannot pass, for they have no interkingdom passport


TREE THINGS
	Trees have roots, it is just a radius
	Roots determine size and capacity of water reservoir
	Dropping water on resevoir raises current wateriness level
	When wateriness is more zero, tree will use it to grow over time
	Growing decreases wateriness
	Bigger trees need more water to grow
	If wateriness is zero, tree will slowly start to die
		Track this with vitality
		Trees with high vitality grow faster (and thus use more water)
		Vitality returns with water and time
		Vitality zero trees will remain dried and died
			Small ones will disappear, big ones will stand ther ever after as a monument of neglect

	Trees grow at constant rate, but because bigger trees have bigger reserovoirs, they can manage longer without watering

	Mature trees produce seeds

	Water comes from clouds

	Trees grow differently in light and shadow, so meter lightness also

	Toxic soil? 

WATER RULES:
	Soil is watered, not trees
	When water is dropped on ground, it is slowly absorbed, either to list of points or to a pixel/voxel map
	Trees drain nearby water within their root radius
	Soil slowly dries itself
	Deeper there is infinite water source, (aquifier?) where huge trees can reach


DONE:
	colliders compute transforms beforehand, only once per frame	
	full terrain coverage
	toggle debug shadow texture
	Gui screen scale in game code
	
	28.5:
	Separate player camera and free camera
	remove game initializable shadow pipeline

	29.5:
	Thing:
		Vulkan explicit shader structs for each pipeline, like ThinMatrix does
		non-generic shader code for main shader
		non-generic shader code for other shaders

		Gui draw only texture
		Vulkan expose shadow texture
		Gui draw texture
	chalk pyramid cube thing
	Separate player debug levels
	vertical collision rays

	30.5:
	Editor: teleport player
	No input for player when menu is open
	remove middle elements from scene

	31.5:
	chunked terrain for increased resolution
	Normal mapping
	fix ground and character normals

	1.6:
	STREAM: New tree rules
		Gradual growing
	Frametime counter

	2.6:
	cylinder colliders
	Tree collision
	Tree radius depending on its growth

	3.6:
	Leaf rendering:
		no buffer
		vkCmdDraw with a ton of instances
		generate mesh with vertex shaders
		topology triangle strip -> 4 vertices for single quad, or 6 for two
		double sided

		outline shape can be a function in uv-space

	4.6:
	Combine leaves to trees

DOING:
	Optimize debug lines

TODO:
	SUPER IMPORTANT but not immediately:
		Optimizable build -> vulkan stuff breaks with -O swithces
			-> may have to do with validation layers
		Startup time is unacceptably slow

		Stop rendering when not top window
		Remove unused stuff from pools when reloading shaders

	Make actual functions for adding trees, there is a lot going on already, which calls for trouble

	Fix leaf shadow inconvenience

	New tree rules
		roots
		water capacity
		dying -> drying, requires color control for shader

	Better pipeline create functions like SaschaWillems

	seed growing in trees 
	falling objects instead of teleport on ground

	remove fixed size arrays, just push_memory in scene initialization.
	Use actual trees structure

	Vulkan:
		remove unnecessary bindings from drawings
		remove need for animation data in vertices for non-animated meshes
		Track vulkan memory like memoryarena
		Put static scenery in static commandbuffer, that does not need to rewritten each frame

	loading screen

	targeting
	contextual targeting, as in water is supposed to drop on tree and not on water


	proper pickuping, as in pickup from front only and closest item always, not first in array

	toggle shadows in game

	Editor:
		add toggles to update only character
	
	Per instance colors for main shader

	seed does not disappear immediately
	dig in to plant?

	Translucent shading
	Specular shading

	Gui:
		pivot control
		panel widget

	water rules

	STREAM: Animate robot

	LOD:
		Leaves -> keep leafs sorted by size, and only process to size determined by density function

	Shadows
		Visualize camera frustums so we can visualize view frustum
		Better shadows

	Falling objects
	Pickup animation
	Clouds and rain
	foliage and rocks
	journey sand

	terrain lod meshes
	chunked heightmap for faster collisions


	planet curvature shader

	character collisions with volumes

	procedural sky
	animated sun
	daytime

	multiple collisions

	fox suit?
	bird suit

	fox npc:s
	bird npc:s

	Angery mountain
	Flying building with eternal shadow
	underground cavern with water pump that can pump water and form a pond to under the flying building
	chalk pyramid

	"Simulation space ends here" signs at both ends

	marching cubes/voxel terrain

	Gear 2:
		Separate animation from motor, and only animate visible models
		Lower collision detection accuracy for models far away
		Overall cull stuff :)

NAMES:
	Feral Gallery?
	Pehvreiwjfpi Gallery?

	Lyndgth Galleries?
	Lndgth Galleries?